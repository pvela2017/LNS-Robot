<?xml version="1.0"?>

<launch>

  <!-- Load gazebo pid configurations from YAML file to parameter server [ NO NEED controllers used just forward the inputs]-->
  <!--<rosparam file="$(find lns_gazebo)/config/gazebo_pid_param.yaml" command="load"/> -->

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find lns_description)/urdf/lns_robot_sim.xacro"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

 <!-- Inicial position-->
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>  <!-- 0.2 Above the ground if there is no base_footprint -->
  <arg name="yaw" default="1.5708"/> <!-- -1.5708 -->


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find lns_gazebo)/worlds/empty_world.sdf"/> 
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model lns_robot -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description"/>



</launch>
